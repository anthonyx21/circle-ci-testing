version: 2
jobs:
  build:
    docker:
      - image: circleci/node:erbium
    working_directory: ~/workspace
    environment:
      DEPLOYMENT_NAME: ci-cd
      JEST_JUNIT_OUTPUT_DIR: "reports/junit/js-test-results.xml"
      # PROJECT_ID: ci-cd-217118
      # CLUSTER_NAME: ci-cd
      # CLUSTER_NAME_STAG: ci-cd-stag
      # CLOUDSDK_COMPUTE_ZONE: us-west1-a 
      # CONTAINER_NAME: ci-cd
      # IMAGE: ci-cd
      # REG_ID: ci-cd
      # REG_ID_PROD: ci-cd-prod
      # IMG_TAG: 0.1.0
      # PROJECT_NAME: ci-cd
      # DEPLOYMENT_ENVIRONMENT: staging
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Install node packages
          command: |
            npm install
      # - run:
      #     name: Start app
      #     command: |
      #       npm start &
      - run:
          name: Run tests
          command: |
            npm run test:unit
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run build
          command: |
            npm run build
      - store_artifacts: # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: reports/junit/js-test-results.xml
          prefix: tests
      # - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
      #     path: coverage
      #     prefix: coverage
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: reports/junit/js-test-results.xml
      - store_artifacts:
          path: dist
          destination: artifact-file
  deploy:
    docker:
      - image: wecs/circle-ci-gcloud-node:0.1.0
    steps:
      - run:
          name: Build and Deploy
          command: |
            npm run build
            if [ "${CIRCLE_BRANCH}" == "build" ]; then
              ./deployment.sh
            fi  